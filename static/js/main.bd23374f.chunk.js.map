{"version":3,"sources":["components/issues/index.module.css","Modals/LabelsModal/index.module.css","components/common/common.module.css","components/Drawer/index.module.css","containers/issuePage/index.module.css","redux/labels/reducer.js","redux/labels/actions.js","redux/issues/actions.js","redux/issues/reducer.js","redux/issue/actions.js","redux/issue/reducer.js","redux/store.js","types.js","components/common/Label.jsx","components/Drawer/SelectLabels.jsx","components/Drawer/Form.jsx","components/Drawer/Success.jsx","Modals/AddIssueDrawer/index.jsx","redux/issue/thunk.js","components/issue/CommentsForm.jsx","components/issue/Comment.jsx","components/issue/Comments.jsx","components/common/IsOpenLabel.jsx","components/common/EditButton.jsx","components/issue/IssueCard.jsx","components/issue/AddLabel.jsx","components/issue/LabelsCard.jsx","components/common/DrawerButton.jsx","components/issue/IssueHeader.jsx","containers/issuePage/index.jsx","components/issues/TableItem.jsx","components/common/search.jsx","components/issues/IssuesTable.jsx","components/issues/IssuesHeader.jsx","data.js","containers/IssuesPage/index.jsx","redux/issues/thunk.js","components/labels/TableItem.jsx","components/labels/LabelsTable.jsx","Modals/LabelsModal/index.jsx","components/labels/LabelsHeader.jsx","routing/publicRoutes.js","routing/path.js","containers/LabelsPage/index.jsx","routing/Routing.jsx","App.jsx","serviceWorker.js","index.jsx","components/issue/index.module.css"],"names":["module","exports","initialState","labels","id","title","bgc","labelsReducer","state","action","type","label","map","filter","IS_OPEN","setIssues","issues","drawerIsShow","boolean","showDrawer","issuesReducer","issue","issueId","labelId","comments","comment","isOpen","description","setError","error","issueReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","labelType","PropTypes","number","string","commentType","Label","arrayOf","shape","bool","backgroundColor","className","m","style","connect","labelsList","setLabelsList","onSelect","e","selectedItem","parseInt","key","length","item","message","info","menu","Item","onClick","overlay","preventDefault","DownOutlined","addIssue","setSuccess","useState","Form","useForm","form","forceUpdate","useEffect","layout","name","onFinish","values","newIssue","setTimeout","resetFields","initialValues","onFinishFailed","errorInfo","rules","required","autoComplete","TextArea","selectLabels","index","shouldUpdate","marginRight","htmlType","disabled","isFieldsTouched","getFieldsError","errors","Success","status","success","placement","closable","onClose","visible","width","getIssue","dispatch","getState","setIssue","CommentsForm","addComment","submitting","setSubmitting","value","setValue","rows","onChange","target","loading","trim","Comment","author","href","avatar","src","alt","content","datetime","moment","format","fromNow","Comments","IsOpenLabel","text","ExclamationCircleOutlined","fontSize","EditButton","onEdit","EditOutlined","marginLeft","cursor","color","Title","Typography","IssueCard","onSwitch","editMode","setEditMode","data","setData","changeHandler","ellipsis","level","titleId","checked","resize","autoSize","icon","CheckOutlined","editedIssue","issueLabels","selectLabel","filteredLabels","setFilteredLabels","selectedLabel","every","LabelsCard","onLabelDelete","extra","labelsCard","labelsCardBody","onConfirm","okText","cancelText","DrawerButton","drawerButton","onDelete","history","useHistory","onBack","goBack","IssuePage","refreshPage","props","match","params","push","addLabel","deleteLabel","setIsopen","deleteIssue","editIssue","this","body","Component","withRouter","TableItem","tableItem","tableItemInner","to","display","CommentOutlined","Search","searchValue","setSearchValue","placeholder","useParams","columns","alignItems","CloseOutlined","padding","borderRadius","dataIndex","sort","a","b","toLowerCase","includes","searchingFor","dataSource","toLabelsPage","TagOutlined","labelsCount","issuesData","IssuesPage","openNotification","notification","refreshIssues","getIssues","prevProps","undefined","RadiusUprightOutlined","some","editLabel","filteredIssues","setFilteredIssues","setState","justifyContent","borderColor","autoFocus","onBlur","editedLabel","DeleteOutlined","setVisible","setTitle","setBgc","onOk","onCancel","input","allowClear","selectColor","span","onMouseOver","onMouseLeave","colorPicker","hex","selectedColor","LabelsHeader","size","component","path","Routing","routes","route","exact","render","App","Content","AddIssueDrawer","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bd23374f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelsCount\":\"issues_labelsCount__1kAkS\",\"toLabelsPage\":\"issues_toLabelsPage__1hnJw\",\"title\":\"issues_title__131HP\",\"tableItem\":\"issues_tableItem__2g2Gf\",\"tableItemInner\":\"issues_tableItemInner__3_Yfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"LabelsModal_body__1H5z4\",\"input\":\"LabelsModal_input__16Gac\",\"selectColor\":\"LabelsModal_selectColor__-JTsc\",\"span\":\"LabelsModal_span__FelH5\",\"colorPicker\":\"LabelsModal_colorPicker__1s3he\",\"selectedColor\":\"LabelsModal_selectedColor__1axvw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"common_label__3PA32\",\"isOpen\":\"common_isOpen__ReMz6\",\"drawerButton\":\"common_drawerButton__3gD5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectLabels\":\"Drawer_selectLabels__8me94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"issuePage_body__3NmWF\"};","import { ADD_LABEL, EDIT_LABEL, DELETE_LABEL } from './actions';\r\n\r\nconst initialState = {\r\n  labels: [\r\n    { id: 1, title: 'CLA Signed', bgc: '#009900' },\r\n    { id: 2, title: 'contributions: claimed', bgc: '#d93f0b' },\r\n    { id: 3, title: 'contributions: up for grabs!', bgc: '#128A0C' },\r\n    { id: 4, title: 'dependencies', bgc: '#0366d6' },\r\n    { id: 5, title: 'difficulty: complex', bgc: '#f9d0c4' },\r\n    { id: 6, title: 'difficulty: impossible', bgc: '#e99695' },\r\n    { id: 7, title: 'difficulty: medium', bgc: '#fef2c0' },\r\n    { id: 8, title: 'difficulty: starter', bgc: '#c5def5' },\r\n    { id: 9, title: 'good first issue', bgc: '#128A0C' },\r\n    { id: 10, title: 'hacktoberfest', bgc: '#ff625f' },\r\n    { id: 11, title: 'issue: announcement', bgc: '#5319e7' },\r\n    { id: 12, title: 'issue: bug report', bgc: '#f49118' },\r\n    { id: 13, title: 'issue: bug', bgc: '#ee0701' },\r\n    { id: 14, title: 'issue: install problem', bgc: '#e5aa4b' },\r\n    { id: 15, title: 'issue: needs investigation', bgc: '#d106e8' },\r\n    { id: 16, title: 'needs triage', bgc: '#b5274d' },\r\n  ],\r\n};\r\nconst labelsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: [...state.labels, action.label],\r\n      };\r\n    case EDIT_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: state.labels.map((label) => {\r\n          if (label.id === action.label.id) {\r\n            return {\r\n              ...label,\r\n              title: action.label.title,\r\n            };\r\n          }\r\n          return label;\r\n        }),\r\n      };\r\n    case DELETE_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: state.labels.filter((label) => label.id !== action.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default labelsReducer;\r\n","export const ADD_LABEL = 'labels/ADD_LABEL';\r\nexport const EDIT_LABEL = 'labels/EDIT_LABEL';\r\nexport const DELETE_LABEL = 'labels/DELETE_LABEL';\r\n\r\nexport const addLabel = (label) => ({ type: ADD_LABEL, label });\r\nexport const editLabel = (label) => ({ type: EDIT_LABEL, label });\r\nexport const deleteLabel = (id) => ({ type: DELETE_LABEL, id });\r\n","export const SET_ISSUES = 'SET_ISSUES';\r\nexport const ADD_ISSUE = 'ADD_ISSUE';\r\nexport const EDIT_ISSUE = 'EDIT_ISSUE';\r\nexport const SHOW_DRAWER = 'SHOW_DRAWER';\r\nexport const ADD_LABEL = 'issues/ADD_LABEL';\r\nexport const DELETE_LABEL = 'issues/DELETE_LABEL';\r\nexport const DELETE_ISSUE = 'issues/DELETE_ISSUE';\r\nexport const ADD_COMMENT = 'issues/ADD_COMMENT';\r\nexport const IS_OPEN = 'issues/IS_OPEN';\r\n\r\nexport const setIssues = (issues) => ({ type: SET_ISSUES, issues });\r\nexport const addIssue = (issue) => ({ type: ADD_ISSUE, issue });\r\nexport const editIssue = (issue) => ({ type: EDIT_ISSUE, issue });\r\nexport const drawerIsShow = (boolean) => ({ type: SHOW_DRAWER, boolean });\r\nexport const addLabel = (id, label) => ({ type: ADD_LABEL, label, id });\r\nexport const deleteIssue = (id) => ({ type: DELETE_ISSUE, id });\r\nexport const deleteLabel = (issueId, labelId) => ({\r\n  type: DELETE_LABEL,\r\n  issueId,\r\n  labelId,\r\n});\r\nexport const addComment = (id, comment) => ({ type: ADD_COMMENT, id, comment });\r\nexport const setIsopen = (id, isOpen) => ({ type: IS_OPEN, id, isOpen });\r\n","import {\r\n  ADD_ISSUE,\r\n  SHOW_DRAWER,\r\n  ADD_LABEL,\r\n  DELETE_LABEL,\r\n  ADD_COMMENT,\r\n  IS_OPEN,\r\n  EDIT_ISSUE,\r\n  DELETE_ISSUE,\r\n  SET_ISSUES,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  issues: [],\r\n  showDrawer: false,\r\n};\r\nconst issuesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ISSUES:\r\n      return {\r\n        ...state,\r\n        issues: action.issues,\r\n      };\r\n    case ADD_ISSUE:\r\n      return {\r\n        ...state,\r\n        issues: [...state.issues, action.issue],\r\n      };\r\n    case SHOW_DRAWER:\r\n      return {\r\n        ...state,\r\n        showDrawer: action.boolean,\r\n      };\r\n    case ADD_LABEL:\r\n      return {\r\n        ...state,\r\n        issues: state.issues.map((issue) => {\r\n          if (issue.id === action.id) {\r\n            return { ...issue, labels: [...issue.labels, action.label] };\r\n          }\r\n          return issue;\r\n        }),\r\n      };\r\n    case DELETE_LABEL:\r\n      return {\r\n        ...state,\r\n        issues: state.issues.map((issue) => {\r\n          if (issue.id === action.issueId) {\r\n            return {\r\n              ...issue,\r\n              labels: issue.labels.filter((label) => {\r\n                if (label.id !== action.labelId) {\r\n                  return label;\r\n                }\r\n                return null;\r\n              }),\r\n            };\r\n          }\r\n          return issue;\r\n        }),\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        issues: state.issues.map((issue) => {\r\n          if (issue.id === action.id) {\r\n            return {\r\n              ...issue,\r\n              comments: [...issue.comments, action.comment],\r\n            };\r\n          }\r\n          return issue;\r\n        }),\r\n      };\r\n    case IS_OPEN:\r\n      return {\r\n        ...state,\r\n        issues: state.issues.map((issue) => {\r\n          if (issue.id === action.id) {\r\n            return {\r\n              ...issue,\r\n              isOpen: !action.isOpen,\r\n            };\r\n          }\r\n          return issue;\r\n        }),\r\n      };\r\n    case DELETE_ISSUE:\r\n      return {\r\n        ...state,\r\n        issues: state.issues.filter((issue) => issue.id !== action.id),\r\n      };\r\n    case EDIT_ISSUE:\r\n      return {\r\n        ...state,\r\n        issues: state.issues.map((issue) => {\r\n          if (issue.id === action.issue.id) {\r\n            return {\r\n              ...issue,\r\n              title: action.issue.title,\r\n              description: action.issue.description,\r\n            };\r\n          }\r\n          return issue;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default issuesReducer;\r\n","export const SET_ISSUE = 'SET_ISSUE';\r\nexport const SET_ERROR = 'SET_ERROR';\r\n\r\nexport const setIssue = (issue) => ({ type: SET_ISSUE, issue });\r\nexport const setError = (error) => ({ type: SET_ERROR, error });\r\n","import { SET_ISSUE, SET_ERROR } from './actions';\r\n\r\nconst initialState = {\r\n  issue: {},\r\n  error: null,\r\n};\r\n\r\nconst issueReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ISSUE:\r\n      return {\r\n        ...state,\r\n        issue: action.issue,\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default issueReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport labelsReducer from './labels/reducer';\r\nimport issuesReducer from './issues/reducer';\r\nimport issueReducer from './issue/reducer';\r\n\r\nconst reducers = combineReducers({\r\n  issues: issuesReducer,\r\n  labels: labelsReducer,\r\n  issue: issueReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const labelType = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  bgc: PropTypes.string,\r\n};\r\nexport const commentType = {\r\n  id: PropTypes.number,\r\n  comment: PropTypes.string,\r\n};\r\nexport const issueType = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  labels: PropTypes.arrayOf(PropTypes.shape(labelType)) || [],\r\n  comments: PropTypes.arrayOf(PropTypes.shape(commentType)) || [],\r\n  isOpen: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport m from './common.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { labelType } from '../../types';\r\n\r\nconst Label = ({ label }) => {\r\n  const bgc = {\r\n    backgroundColor: label.bgc,\r\n  };\r\n  return (\r\n    <span className={m.label} style={bgc}>\r\n      {label.title}\r\n    </span>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  label: PropTypes.shape(labelType),\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport { Menu, Dropdown, message, Button } from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport Label from '../common/Label';\r\nimport PropTypes from 'prop-types';\r\nimport { labelType } from '../../types';\r\n\r\nconst SelectLabels = ({ labels, labelsList, setLabelsList }) => {\r\n  const onSelect = (e) => {\r\n    const selectedItem = labels.filter((label) => {\r\n      if (label.id === parseInt(e.key)) {\r\n        return label;\r\n      }\r\n      return null;\r\n    });\r\n    if (selectedItem.length) {\r\n      const filterItems = labelsList.filter((item) => {\r\n        if (item.id === selectedItem[0].id) {\r\n          return item;\r\n        }\r\n        return null;\r\n      });\r\n      if (!filterItems.length) {\r\n        setLabelsList([...labelsList, selectedItem[0]]);\r\n      } else {\r\n        message.info('Label already added');\r\n      }\r\n    }\r\n  };\r\n  const menu = (\r\n    <Menu>\r\n      {labels.map((label) => (\r\n        <Menu.Item key={label.id} onClick={onSelect}>\r\n          <Label label={label} />\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown overlay={menu}>\r\n      <Button\r\n        type=\"link\"\r\n        className=\"ant-dropdown-link\"\r\n        onClick={(e) => e.preventDefault()}\r\n      >\r\n        Select labels <DownOutlined />\r\n      </Button>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nSelectLabels.propTypes = {\r\n  labels: PropTypes.arrayOf(PropTypes.shape(labelType)) || [],\r\n  labelsList: PropTypes.arrayOf(PropTypes.shape(labelType)) || [],\r\n  setLabelsList: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  labels: state.labels.labels,\r\n});\r\nexport default connect(mapStateToProps, {})(SelectLabels);\r\n","import React, { useEffect, useState } from 'react';\r\nimport m from './index.module.css';\r\nimport { Form, Input, Button } from 'antd';\r\nimport SelectLabels from './SelectLabels';\r\nimport Label from '../common/Label';\r\nimport { connect } from 'react-redux';\r\nimport { addIssue, drawerIsShow } from '../../redux/issues/actions';\r\nimport PropTypes from 'prop-types';\r\nimport { issueType } from '../../types';\r\n\r\nconst IssueForm = ({ issues, addIssue, drawerIsShow, setSuccess }) => {\r\n  const [labelsList, setLabelsList] = useState([]);\r\n\r\n  const [form] = Form.useForm();\r\n  const [, setError] = useState({});\r\n  const onFinishFailed = (errorInfo) => {\r\n    setError(errorInfo);\r\n  };\r\n  let initialValues = {\r\n    title: '',\r\n    description: '',\r\n  };\r\n  const [, forceUpdate] = useState(); // To disable submit button at the beginning.\r\n\r\n  useEffect(() => {\r\n    forceUpdate({});\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    const { title, description } = values;\r\n    const newIssue = {\r\n      id: issues.length + 1,\r\n      title,\r\n      description,\r\n      labels: [...labelsList],\r\n      comments: [],\r\n      isOpen: true,\r\n    };\r\n    addIssue(newIssue);\r\n    setSuccess(true);\r\n    setTimeout(() => {\r\n      form.resetFields();\r\n      setLabelsList([]);\r\n      drawerIsShow(false);\r\n      setSuccess(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      layout=\"vertical\"\r\n      form={form}\r\n      name=\"addIssue\"\r\n      onFinish={onFinish}\r\n      initialValues={initialValues}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        name=\"title\"\r\n        label=\"Title\"\r\n        rules={[{ required: true, message: 'Please input issue title' }]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"description\"\r\n        label=\"Description\"\r\n        rules={[{ required: true, message: 'Please input issue description' }]}\r\n      >\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n      <div className={m.selectLabels}>\r\n        <SelectLabels labelsList={labelsList} setLabelsList={setLabelsList} />\r\n        {labelsList\r\n          ? labelsList.map((item, index) => <Label key={index} label={item} />)\r\n          : null}\r\n      </div>\r\n      <Form.Item shouldUpdate>\r\n        {() => (\r\n          <>\r\n            <Button\r\n              style={{ marginRight: '10px' }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={\r\n                !form.isFieldsTouched(true) ||\r\n                form.getFieldsError().filter(({ errors }) => errors.length)\r\n                  .length\r\n              }\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              htmlType=\"button\"\r\n              onClick={() => form.resetFields() + setLabelsList([])}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nIssueForm.propTypes = {\r\n  issues: PropTypes.arrayOf(PropTypes.shape(issueType)),\r\n  addIssue: PropTypes.func,\r\n  drawerIsShow: PropTypes.func,\r\n  setSuccess: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  issues: state.issues.issues,\r\n});\r\nexport default connect(mapStateToProps, { addIssue, drawerIsShow })(IssueForm);\r\n","import React from 'react';\r\nimport { Result } from 'antd';\r\n\r\nconst Success = () => {\r\n  return <Result status=\"success\" title=\"Successfully Added a New Issue\" />;\r\n};\r\n\r\nexport default Success;\r\n","import React, { useState } from 'react';\r\nimport { Drawer } from 'antd';\r\nimport Form from '../../components/Drawer/Form';\r\nimport Success from '../../components/Drawer/Success';\r\nimport { drawerIsShow } from '../../redux/issues/actions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddIssue = ({ showDrawer, drawerIsShow }) => {\r\n  const [success, setSuccess] = useState(false);\r\n  return (\r\n    <Drawer\r\n      title=\"Add new issue\"\r\n      placement=\"right\"\r\n      closable={false}\r\n      onClose={() => drawerIsShow(false)}\r\n      visible={showDrawer}\r\n      width={400}\r\n    >\r\n      {!success ? <Form setSuccess={setSuccess} /> : <Success />}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nAddIssue.propTypes = {\r\n  showDrawer: PropTypes.bool,\r\n  drawerIsShow: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  showDrawer: state.issues.showDrawer,\r\n});\r\nexport default connect(mapStateToProps, { drawerIsShow })(AddIssue);\r\n","import { setIssue, setError } from './actions';\r\n\r\nconst getIssue = (id) => (dispatch, getState) => {\r\n  const issues = [...getState().issues.issues];\r\n  const issue = issues.filter((item) => {\r\n    if (item.id === parseInt(id, 10)) {\r\n      return item;\r\n    }\r\n    return null;\r\n  });\r\n  if (issue.length > 0) {\r\n    dispatch(setIssue(issue[0]));\r\n  } else {\r\n    dispatch(setError('Page is undefined'));\r\n  }\r\n};\r\n\r\nexport default getIssue;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input } from 'antd';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { issueType } from '../../types';\r\n\r\nconst CommentsForm = ({ issue, addComment }) => {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [value, setValue] = useState('');\r\n  const onSubmit = () => {\r\n    if (value.trim()) {\r\n      const comment = {\r\n        id: issue.comments.length + 1,\r\n        comment: value,\r\n      };\r\n      setSubmitting(true);\r\n      setTimeout(() => {\r\n        addComment(issue.id, comment);\r\n        setValue('');\r\n        setSubmitting(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '80%' }}>\r\n      <Form.Item>\r\n        <Input.TextArea\r\n          rows={4}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          htmlType=\"submit\"\r\n          loading={submitting}\r\n          onClick={onSubmit}\r\n          type=\"primary\"\r\n        >\r\n          Add Comment\r\n        </Button>\r\n      </Form.Item>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentsForm.propTypes = {\r\n  issue: PropTypes.shape(issueType),\r\n  addComment: PropTypes.func,\r\n};\r\n\r\nexport default CommentsForm;\r\n","import React from 'react';\r\nimport { Comment as Com, Tooltip, Avatar } from 'antd';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { commentType } from '../../types';\r\n\r\nconst Comment = ({ comment }) => {\r\n  return (\r\n    <Com\r\n      style={{ width: '80%' }}\r\n      author={<a href={comment.id}>author: {comment.id}</a>}\r\n      avatar={\r\n        <Avatar\r\n          src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n          alt=\"Han Solo\"\r\n        />\r\n      }\r\n      content={<p>{comment.comment}</p>}\r\n      datetime={\r\n        <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\r\n          <span>{moment().fromNow()}</span>\r\n        </Tooltip>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.shape(commentType),\r\n};\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\nimport m from './index.module.css';\r\nimport CommentsForm from './CommentsForm';\r\nimport Comment from './Comment';\r\nimport PropTypes from 'prop-types';\r\nimport { issueType } from '../../types';\r\n\r\nconst Comments = ({ issue, addComment }) => {\r\n  return (\r\n    <div className={m.comments}>\r\n      {issue &&\r\n        issue.comments &&\r\n        issue.comments.map((comment) => (\r\n          <Comment key={comment.id} comment={comment} />\r\n        ))}\r\n      <CommentsForm issue={issue} addComment={addComment} />\r\n    </div>\r\n  );\r\n};\r\n\r\nComments.propTypes = {\r\n  issue: PropTypes.shape(issueType),\r\n  addComment: PropTypes.func,\r\n};\r\n\r\nexport default Comments;\r\n","import React from 'react';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport m from './common.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst IsOpenLabel = ({ bgc, text }) => {\r\n  return (\r\n    <div className={m.isOpen} style={{ backgroundColor: bgc }}>\r\n      <ExclamationCircleOutlined\r\n        style={{ marginRight: '5px', fontSize: '18px' }}\r\n      />\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nIsOpenLabel.propTypes = {\r\n  bgc: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default IsOpenLabel;\r\n","import React from 'react';\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\nconst EditButton = ({ onEdit }) => {\r\n  const style = {\r\n    marginLeft: 10,\r\n    cursor: 'pointer',\r\n    fontSize: 16,\r\n    color: 'blue',\r\n  };\r\n  return <EditOutlined style={style} onClick={onEdit} />;\r\n};\r\n\r\nexport default EditButton;\r\n","import React from 'react';\r\nimport m from './index.module.css';\r\nimport { Switch, Card, Input, Button } from 'antd';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport IsOpenLabel from '../../components/common/IsOpenLabel';\r\nimport { Typography } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { issueType } from '../../types';\r\nimport EditButton from '../common/EditButton';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nconst { Title } = Typography;\r\n\r\nconst IssueCard = ({ issue, onSwitch, onEdit }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [data, setData] = useState({\r\n    title: '',\r\n    description: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setData({ ...data, title: issue.title, description: issue.description });\r\n  }, [issue]);\r\n  const changeHandler = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n  const onSave = () => {\r\n    const editedIssue = {\r\n      id: issue.id,\r\n      ...data,\r\n    };\r\n    onEdit(editedIssue);\r\n    setEditMode(false);\r\n  };\r\n  const title = (\r\n    <div className=\"df\">\r\n      <div className={m.title}>\r\n        {!editMode ? (\r\n          <>\r\n            <Title ellipsis=\"true\" level={3}>\r\n              {data.title}\r\n            </Title>\r\n            <Title level={3} className={m.titleId}>\r\n              {'#' + issue.id}\r\n            </Title>\r\n          </>\r\n        ) : (\r\n          <Input\r\n            onChange={changeHandler}\r\n            name=\"title\"\r\n            style={{ width: '50%' }}\r\n            value={data.title}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"df\">\r\n        {issue.isOpen ? (\r\n          <IsOpenLabel bgc=\"#28a745\" text=\"Open\" />\r\n        ) : (\r\n          <IsOpenLabel bgc=\"#d73a49\" text=\"Closed\" />\r\n        )}\r\n\r\n        <Switch checked={issue.isOpen} onChange={onSwitch} />\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Card title={title} style={{ width: '80%' }}>\r\n      {!editMode ? (\r\n        <div style={{ width: '50%' }}>\r\n          {data.description}\r\n          <EditButton onEdit={() => setEditMode(true)} />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Input.TextArea\r\n            style={{ width: '50%', resize: 'none', marginRight: 10 }}\r\n            onChange={changeHandler}\r\n            name=\"description\"\r\n            value={data.description}\r\n            autoSize={true}\r\n          />\r\n          <Button icon={<CheckOutlined />} type=\"primary\" onClick={onSave}>\r\n            Save\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nIssueCard.propTypes = {\r\n  issue: PropTypes.shape(issueType),\r\n  onSwitch: PropTypes.func,\r\n};\r\n\r\nexport default IssueCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Menu, Dropdown, Button } from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport Label from '../common/Label';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { labelType } from '../../types';\r\n\r\nconst AddLabel = ({ labels, issueLabels, selectLabel, id }) => {\r\n  const [filteredLabels, setFilteredLabels] = useState([]);\r\n  const onSelect = (value) => {\r\n    const selectedLabel = filteredLabels.filter((item) => {\r\n      if (item.id === parseInt(value.key)) return item;\r\n      return null;\r\n    });\r\n    selectLabel(id, selectedLabel[0]);\r\n  };\r\n  useEffect(() => {\r\n    const item = labels.filter((label) => {\r\n      const item =\r\n        issueLabels &&\r\n        issueLabels.every((item) => {\r\n          if (label.id !== item.id) {\r\n            return label;\r\n          }\r\n          return null;\r\n        });\r\n      return item;\r\n    });\r\n    setFilteredLabels(item);\r\n  }, [issueLabels, labels]);\r\n  const menu = (\r\n    <Menu>\r\n      {filteredLabels.length ? (\r\n        filteredLabels.map((label) => (\r\n          <Menu.Item key={label.id} onClick={onSelect}>\r\n            <Label label={label} />\r\n          </Menu.Item>\r\n        ))\r\n      ) : (\r\n        <Menu.Item>all labels are added</Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown overlay={menu}>\r\n      <Button\r\n        type=\"link\"\r\n        className=\"ant-dropdown-link\"\r\n        onClick={(e) => e.preventDefault()}\r\n      >\r\n        Add Label <DownOutlined />\r\n      </Button>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nAddLabel.propTypes = {\r\n  labels: PropTypes.arrayOf(PropTypes.shape(labelType)) || [],\r\n  issueLabels: PropTypes.arrayOf(PropTypes.shape(labelType)) || [],\r\n  selectLabel: PropTypes.func,\r\n  id: PropTypes.number,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  labels: state.labels.labels,\r\n});\r\nexport default connect(mapStateToProps, {})(AddLabel);\r\n","import React from 'react';\r\nimport m from './index.module.css';\r\nimport { Card, Popconfirm, Button } from 'antd';\r\nimport AddLabel from './AddLabel';\r\nimport Label from '../common/Label';\r\nimport PropTypes from 'prop-types';\r\nimport { issueType } from '../../types';\r\n\r\nconst LabelsCard = ({ issue, selectLabel, onLabelDelete }) => {\r\n  return (\r\n    <Card\r\n      title=\"Labels\"\r\n      style={{ width: '20%' }}\r\n      extra={[\r\n        <AddLabel\r\n          key={1}\r\n          id={issue.id}\r\n          issueLabels={issue.labels}\r\n          selectLabel={selectLabel}\r\n        />,\r\n      ]}\r\n    >\r\n      <div className={m.labelsCard}>\r\n        {issue.labels &&\r\n          issue.labels.map((label) => (\r\n            <div key={label.id} className={m.labelsCardBody}>\r\n              <Label label={label} />\r\n              <Popconfirm\r\n                title=\"Are you sure delete this label?\"\r\n                onConfirm={() => onLabelDelete(label)}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n              >\r\n                <Button type=\"link\">Delete</Button>\r\n              </Popconfirm>\r\n            </div>\r\n          ))}\r\n        {issue.labels && !issue.labels.length && <p>Not yet</p>}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLabelsCard.propTypes = {\r\n  issue: PropTypes.shape(issueType),\r\n  selectLabel: PropTypes.func,\r\n  onLabelDelete: PropTypes.func,\r\n};\r\n\r\nexport default LabelsCard;\r\n","import React from 'react';\r\nimport m from './common.module.css';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DrawerButton = ({ drawerIsShow }) => {\r\n  return (\r\n    <Button\r\n      className={m.drawerButton}\r\n      onClick={() => drawerIsShow(true)}\r\n      type=\"primary\"\r\n    >\r\n      New issue\r\n    </Button>\r\n  );\r\n};\r\nDrawerButton.propTypes = {\r\n  drawerIsShow: PropTypes.func,\r\n};\r\nexport default DrawerButton;\r\n","import React from 'react';\r\nimport { PageHeader, Popconfirm, Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { drawerIsShow } from '../../redux/issues/actions';\r\nimport DrawerButton from '../common/DrawerButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst IssueHeader = ({ drawerIsShow, onDelete }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <PageHeader\r\n      className=\"site-page-header\"\r\n      onBack={() => history.goBack()}\r\n      title=\"Issue\"\r\n      extra={[\r\n        <Popconfirm\r\n          key={1}\r\n          title=\"Are you sure delete this issue?\"\r\n          onConfirm={onDelete}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <Button type=\"link\">Delete</Button>\r\n        </Popconfirm>,\r\n        <DrawerButton key={2} drawerIsShow={drawerIsShow} />,\r\n      ]}\r\n    />\r\n  );\r\n};\r\nIssueHeader.propTypes = {\r\n  drawerIsShow: PropTypes.func,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default connect(null, { drawerIsShow })(IssueHeader);\r\n","import React, { Component } from 'react';\r\nimport { message } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport getIssue from '../../redux/issue/thunk';\r\nimport {\r\n  addLabel,\r\n  deleteLabel,\r\n  addComment,\r\n  setIsopen,\r\n  deleteIssue,\r\n  editIssue,\r\n} from '../../redux/issues/actions';\r\nimport Comments from '../../components/issue/Comments';\r\nimport IssueCard from '../../components/issue/IssueCard';\r\nimport LabelsCard from '../../components/issue/LabelsCard';\r\nimport { issueType } from '../../types';\r\nimport IssueHeader from '../../components/issue/IssueHeader';\r\nimport m from './index.module.css';\r\n\r\nclass IssuePage extends Component {\r\n  componentDidMount() {\r\n    this.refreshPage();\r\n  }\r\n\r\n  refreshPage = () => {\r\n    const { id } = this.props.match.params;\r\n    if (!id) {\r\n      this.props.history.push('./issues');\r\n    }\r\n    this.props.getIssue(id);\r\n  };\r\n\r\n  selectLabel = (id, label) => {\r\n    this.props.addLabel(id, label);\r\n    this.refreshPage();\r\n  };\r\n\r\n  addComment = (id, comment) => {\r\n    this.props.addComment(id, comment);\r\n    this.refreshPage();\r\n  };\r\n\r\n  onLabelDelete = (label) => {\r\n    this.props.deleteLabel(this.props.issue.id, label.id);\r\n    this.refreshPage();\r\n    message.info('Label deleted');\r\n  };\r\n\r\n  onSwitch = () => {\r\n    this.props.setIsopen(this.props.issue.id, this.props.issue.isOpen);\r\n    this.refreshPage();\r\n  };\r\n\r\n  onDelete = () => {\r\n    this.props.deleteIssue(this.props.issue.id);\r\n    this.props.history.push('/issues');\r\n  };\r\n\r\n  onEdit = (issue) => {\r\n    this.props.editIssue(issue);\r\n  };\r\n\r\n  render() {\r\n    if (this.props.error) {\r\n      this.props.history.push('/issues');\r\n    }\r\n    const { issue } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <IssueHeader onDelete={this.onDelete} />\r\n        <div className={m.body}>\r\n          <IssueCard\r\n            onSwitch={this.onSwitch}\r\n            issue={issue}\r\n            onEdit={this.onEdit}\r\n          />\r\n          <LabelsCard\r\n            issue={issue}\r\n            onLabelDelete={this.onLabelDelete}\r\n            selectLabel={this.selectLabel}\r\n          />\r\n          <Comments issue={issue} addComment={this.addComment} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIssuePage.propTypes = {\r\n  issue: PropTypes.shape(issueType),\r\n  error: PropTypes.string,\r\n  getIssue: PropTypes.func,\r\n  addLabel: PropTypes.func,\r\n  deleteLabel: PropTypes.func,\r\n  deleteIssue: PropTypes.func,\r\n  editIssue: PropTypes.func,\r\n  addComment: PropTypes.func,\r\n  setIsopen: PropTypes.func,\r\n  id: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  issue: state.issue.issue,\r\n  error: state.issue.error,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    getIssue,\r\n    addLabel,\r\n    deleteLabel,\r\n    addComment,\r\n    setIsopen,\r\n    deleteIssue,\r\n    editIssue,\r\n  })(IssuePage)\r\n);\r\n","import React from 'react';\r\nimport m from './index.module.css';\r\nimport { CommentOutlined } from '@ant-design/icons';\r\nimport Label from '../common/Label';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport { issueType } from '../../types';\r\n\r\nconst TableItem = ({ issue }) => {\r\n  return (\r\n    <div className={m.tableItem}>\r\n      <div className={m.tableItemInner}>\r\n        <ExclamationCircleOutlined\r\n          style={{\r\n            marginRight: '5px',\r\n            fontSize: '18px',\r\n            color: issue.isOpen ? '#28a745' : '#d73a49',\r\n          }}\r\n        />\r\n        <NavLink className={m.title} to={'/issue/' + issue.id}>\r\n          {issue.title}\r\n        </NavLink>\r\n        <div style={{ display: 'flex' }}>\r\n          {issue.labels.map((label, index) => (\r\n            <Label key={index} label={label} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {issue.comments.length > 0 && (\r\n        <div>\r\n          <CommentOutlined style={{ marginRight: '5px' }} />\r\n          {issue.comments.length}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nTableItem.propTypes = {\r\n  issue: PropTypes.shape(issueType),\r\n};\r\n\r\nexport default TableItem;\r\n","import React from 'react';\r\nimport { Input } from 'antd';\r\n\r\nconst Search = ({ searchValue, setSearchValue, placeholder }) => {\r\n  return (\r\n    <Input\r\n      placeholder={placeholder}\r\n      value={searchValue}\r\n      onChange={(e) => setSearchValue(e.target.value)}\r\n      style={{ width: 200, marginRight: '10px' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from 'react';\r\nimport { Table, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport TableItem from './TableItem';\r\nimport { issueType } from '../../types';\r\nimport PropTypes from 'prop-types';\r\nimport Search from '../common/search';\r\nimport { useParams, NavLink } from 'react-router-dom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\n\r\nconst IssuesTable = ({ issues }) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const params = useParams();\r\n\r\n  const searchingFor = (searchValue) => {\r\n    return (issue) => {\r\n      return (\r\n        issue.title.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n        !searchValue\r\n      );\r\n    };\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: (\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <p style={{ marginRight: '10px' }}>{issues.length + ' issues'}</p>\r\n          <Search\r\n            searchValue={searchValue}\r\n            setSearchValue={setSearchValue}\r\n            placeholder=\"Search all issues\"\r\n          />\r\n          {searchValue.length > 0 && (\r\n            <Button onClick={() => setSearchValue('')}>Reset</Button>\r\n          )}\r\n          {params.label && (\r\n            <div>\r\n              <NavLink to=\"/issues\">\r\n                <CloseOutlined\r\n                  // onClick={() => getIssues()}\r\n                  style={{\r\n                    color: 'white',\r\n                    backgroundColor: '#585858',\r\n                    padding: '3px',\r\n                    borderRadius: 5,\r\n                    cursor: 'pointer',\r\n                    marginRight: 5,\r\n                  }}\r\n                />\r\n              </NavLink>\r\n              clear labels filter\r\n            </div>\r\n          )}\r\n        </div>\r\n      ),\r\n      dataIndex: 'name',\r\n    },\r\n  ];\r\n\r\n  const data = issues\r\n    .sort((a, b) => (a.id < b.id ? 1 : -1))\r\n    .filter(searchingFor(searchValue))\r\n    .map((issue) => {\r\n      return {\r\n        key: issue.id,\r\n        name: <TableItem issue={issue} />,\r\n      };\r\n    });\r\n\r\n  return <Table columns={columns} dataSource={data} />;\r\n};\r\n\r\nIssuesTable.propTypes = {\r\n  issues: PropTypes.arrayOf(PropTypes.shape(issueType)),\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  issues: state.issues.issues,\r\n});\r\nexport default connect(mapStateToProps, {})(IssuesTable);\r\n","import React from 'react';\r\nimport m from './index.module.css';\r\nimport { Button, PageHeader } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TagOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport { drawerIsShow } from '../../redux/issues/actions';\r\nimport DrawerButton from '../common/DrawerButton';\r\nimport PropTypes from 'prop-types';\r\nimport { labelType } from '../../types';\r\n\r\nconst IssuesHeader = ({ labels, drawerIsShow }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <PageHeader\r\n      className=\"site-page-header\"\r\n      title=\"Issues\"\r\n      extra={[\r\n        <Button\r\n          key={1}\r\n          onClick={() => history.push('/labels')}\r\n          className={m.toLabelsPage}\r\n          icon={<TagOutlined />}\r\n        >\r\n          Labels\r\n          <span className={m.labelsCount}>{labels.length}</span>\r\n        </Button>,\r\n        <DrawerButton key={2} drawerIsShow={drawerIsShow} />,\r\n      ]}\r\n    ></PageHeader>\r\n  );\r\n};\r\n\r\nIssuesHeader.propTypes = {\r\n  labels: PropTypes.arrayOf(PropTypes.shape(labelType)) || [],\r\n  drawerIsShow: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  showDrawer: state.issues.showDrawer,\r\n  labels: state.labels.labels,\r\n});\r\nexport default connect(mapStateToProps, { drawerIsShow })(IssuesHeader);\r\n","export const issuesData = [\r\n  {\r\n    id: 1,\r\n    title: 'unable to create-react-app using npx install command',\r\n    description:\r\n      'Hi All, I am trying to create a new app using create-react-app command. Below is the command used and the command is getting stuck in installing react,  I have Following versions: I tried clearing cache, re-installing node.js, restarted the system. My internet speed is fine. I dont know what the issue is. Could someone please help how can I get an app created? Thanks in advance! Harry',\r\n    labels: [{ id: 1, title: 'CLA Signed', bgc: '#009900' }],\r\n    comments: [\r\n      {\r\n        id: 1,\r\n        comment:\r\n          \"If you've previously installed create-react-app globally via npm install -g create-react-app, then uninstall the package using npm uninstall -g create-react-app to ensure that npx always uses the latest version.\",\r\n      },\r\n      {\r\n        id: 2,\r\n        comment:\r\n          'Thanks for your concern Well i tried it but it cound not resolve the issue',\r\n      },\r\n    ],\r\n    isOpen: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Dependencies pulled down don't match repo\",\r\n    description:\r\n      \"It looks like v3.4.1 of react-scripts was last published to NPM four months ago - and so the dependency versions that I get don't match what is currently listed in the latest version of its package.json (e.g., webpack-dev-server 3.10.3 vs. 3.11.0 as an example, which came from this commit, even though package.json in the repo continues to shows 3.4.1 through several pushes). Does a new version need to be published out to npm? I need to take the dependency versions currently listed to get around a noted security vulnerability with webpack-dev-server 3.10.3 (really, with it's dependency on an older version of jquery).\",\r\n    labels: [\r\n      { id: 16, title: 'needs triage', bgc: '#b5274d' },\r\n      { id: 1, title: 'CLA Signed', bgc: '#009900' },\r\n    ],\r\n    comments: [],\r\n    isOpen: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Error',\r\n    description:\r\n      \"I write create-react-app myapp, after all installations I write npm start, and an error appears. Why?{Failed to compile.Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.configuration.module.rules[2].oneOf[1].include: The provided value  contains exclamation mark (!) which is not allowed because it's reserved for loader syntax.npm ERR! code ELIFECYCLE npm ERR! errno 1 npm ERR! bisness@0.1.0 start: react-scripts start npm ERR! Exit status 1 npm ERR!npm ERR! Failed at the bisness@0.1.0 start script. npm ERR! This is probably not a problem with npm. There is likely additional logging output above.npm ERR! A complete log of this run can be found in: npm ERR!   to compile. Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.\",\r\n    labels: [\r\n      { id: 16, title: 'needs triage', bgc: '#b5274d' },\r\n      { id: 12, title: 'issue: bug report', bgc: '#f49118' },\r\n      { id: 1, title: 'CLA Signed', bgc: '#009900' },\r\n    ],\r\n    comments: [],\r\n    isOpen: true,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'EMISSINGARG ',\r\n    description:\r\n      \"I write create-react-app myapp, after all installations I write npm start, and an error appears. Why?{Failed to compile.Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.configuration.module.rules[2].oneOf[1].include: The provided value  contains exclamation mark (!) which is not allowed because it's reserved for loader syntax.npm ERR! code ELIFECYCLE npm ERR! errno 1 npm ERR! bisness@0.1.0 start: react-scripts start npm ERR! Exit status 1 npm ERR!npm ERR! Failed at the bisness@0.1.0 start script. npm ERR! This is probably not a problem with npm. There is likely additional logging output above.npm ERR! A complete log of this run can be found in: npm ERR!   to compile. Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.\",\r\n    labels: [\r\n      { id: 8, title: 'difficulty: starter', bgc: '#c5def5' },\r\n      { id: 9, title: 'good first issue', bgc: '#128A0C' },\r\n    ],\r\n    comments: [],\r\n    isOpen: true,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'TS Watch mode recompiling stuck ',\r\n    description:\r\n      \"I write create-react-app myapp, after all installations I write npm start, and an error appears. Why?{Failed to compile.Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.configuration.module.rules[2].oneOf[1].include: The provided value  contains exclamation mark (!) which is not allowed because it's reserved for loader syntax.npm ERR! code ELIFECYCLE npm ERR! errno 1 npm ERR! bisness@0.1.0 start: react-scripts start npm ERR! Exit status 1 npm ERR!npm ERR! Failed at the bisness@0.1.0 start script. npm ERR! This is probably not a problem with npm. There is likely additional logging output above.npm ERR! A complete log of this run can be found in: npm ERR!   to compile. Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.\",\r\n    labels: [\r\n      { id: 4, title: 'dependencies', bgc: '#0366d6' },\r\n      { id: 5, title: 'difficulty: complex', bgc: '#f9d0c4' },\r\n    ],\r\n    comments: [],\r\n    isOpen: true,\r\n  },\r\n];\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { RadiusUprightOutlined } from '@ant-design/icons';\r\nimport { notification } from 'antd';\r\nimport IssuesTable from '../../components/issues/IssuesTable';\r\nimport IssuesHeader from '../../components/issues/IssuesHeader';\r\nimport { setError } from '../../redux/issue/actions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getIssues } from '../../redux/issues/thunk';\r\n\r\nclass IssuesPage extends Component {\r\n  openNotification = () => {\r\n    notification.info({\r\n      message: this.props.error,\r\n    });\r\n    this.props.setError(null);\r\n  };\r\n  refreshIssues = () => {\r\n    const label = this.props.match.params.label;\r\n    this.props.getIssues(label);\r\n  };\r\n  componentDidMount() {\r\n    debugger;\r\n    this.refreshIssues();\r\n    this.props.error && this.openNotification();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.match.params.label &&\r\n      this.props.match.params.label === undefined\r\n    ) {\r\n      debugger;\r\n      this.refreshIssues();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <IssuesHeader />\r\n        <IssuesTable />\r\n        <RadiusUprightOutlined />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nIssuesPage.propTypes = {\r\n  error: PropTypes.string || null,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.issue.error,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { setError, getIssues })(IssuesPage)\r\n);\r\n","import { issuesData } from '../../data';\r\nimport { setIssues } from './actions';\r\n\r\nexport const getIssues = (label) => (dispatch) => {\r\n  if (label) {\r\n    const issues = issuesData.filter((issue) => {\r\n      const item =\r\n        issue.labels &&\r\n        issue.labels.some((item) => {\r\n          if (parseInt(label, 10) === item.id) {\r\n            return issue;\r\n          }\r\n          return null;\r\n        });\r\n      return item;\r\n    });\r\n    dispatch(setIssues(issues));\r\n  } else {\r\n    dispatch(setIssues(issuesData));\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Label from '../common/Label';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { labelType, issueType } from '../../types';\r\nimport PropTypes from 'prop-types';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { Tooltip, Popconfirm, Input } from 'antd';\r\nimport EditButton from '../common/EditButton';\r\nimport { issuesData } from '../../data';\r\n\r\nconst TableItem = ({ label, issues, deleteLabel, editLabel }) => {\r\n  const [filteredIssues, setFilteredIssues] = useState([]);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [state, setState] = useState({\r\n    title: label.title,\r\n    bgc: label.bgc,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const item = issuesData.filter((issue) => {\r\n      const item =\r\n        issue.labels &&\r\n        issue.labels.some((item) => {\r\n          if (label.id === item.id) {\r\n            return issue;\r\n          }\r\n          return null;\r\n        });\r\n      return item;\r\n    });\r\n    setFilteredIssues(item);\r\n  }, [issues, label]);\r\n\r\n  useEffect(() => {\r\n    setState({ ...state, title: label.title, bgc: label.bgc });\r\n  }, [label]);\r\n  const onSave = () => {\r\n    const editedLabel = {\r\n      id: label.id,\r\n      title: state.title,\r\n    };\r\n    editLabel(editedLabel);\r\n    setEditMode(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n      {!editMode ? (\r\n        <div>\r\n          <Popconfirm\r\n            title=\"Are you sure delete this label?\"\r\n            onConfirm={() => deleteLabel(label.id)}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Tooltip placement=\"topLeft\" title=\"Delete label\">\r\n              <DeleteOutlined style={{ marginRight: 10 }} />\r\n            </Tooltip>\r\n          </Popconfirm>\r\n          <Label label={state} />\r\n          <EditButton onEdit={() => setEditMode(true)} />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Input\r\n            style={{ width: 100, borderColor: state.bgc }}\r\n            value={state.title}\r\n            autoFocus={true}\r\n            onChange={(e) => setState({ ...state, title: e.target.value })}\r\n            onBlur={onSave}\r\n          />\r\n        </>\r\n      )}\r\n      {filteredIssues.length > 0 && (\r\n        <NavLink to={'/issues/' + label.id}>\r\n          <div style={{ cursor: 'pointer' }}>\r\n            <ExclamationCircleOutlined style={{ marginRight: '5px' }} />\r\n            {filteredIssues.length}\r\n          </div>\r\n        </NavLink>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nTableItem.propTypes = {\r\n  issues: PropTypes.arrayOf(PropTypes.shape(issueType)),\r\n  label: PropTypes.shape(labelType),\r\n};\r\n\r\nexport default TableItem;\r\n","import React, { useState } from 'react';\r\nimport { Table, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport TableItem from './TableItem';\r\nimport PropTypes from 'prop-types';\r\nimport { labelType, issueType } from '../../types';\r\nimport Search from '../common/search';\r\nimport { deleteLabel, editLabel } from '../../redux/labels/actions';\r\n\r\nconst LabelsTable = ({ labels, issues, deleteLabel, editLabel }) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const searchingFor = (searchValue) => {\r\n    return (label) => {\r\n      return (\r\n        label.title.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n        !searchValue\r\n      );\r\n    };\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: (\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <p style={{ marginRight: '10px' }}>{labels.length + ' labels'}</p>\r\n          <Search\r\n            searchValue={searchValue}\r\n            setSearchValue={setSearchValue}\r\n            placeholder=\"Search all labels\"\r\n          />\r\n          {searchValue.length > 0 && (\r\n            <Button onClick={() => setSearchValue('')}>Reset</Button>\r\n          )}\r\n        </div>\r\n      ),\r\n      dataIndex: 'label',\r\n    },\r\n  ];\r\n  const data = labels\r\n    .sort((a, b) => (a.id < b.id ? 1 : -1))\r\n    .filter(searchingFor(searchValue))\r\n    .map((label) => {\r\n      return {\r\n        key: label.id,\r\n        label: (\r\n          <TableItem\r\n            deleteLabel={deleteLabel}\r\n            label={label}\r\n            issues={issues}\r\n            editLabel={editLabel}\r\n          />\r\n        ),\r\n      };\r\n    });\r\n  return <Table columns={columns} dataSource={data} />;\r\n};\r\n\r\nLabelsTable.propTypes = {\r\n  labels: PropTypes.arrayOf(PropTypes.shape(labelType)) || [],\r\n  issues: PropTypes.arrayOf(PropTypes.shape(issueType)),\r\n  deleteLabel: PropTypes.func,\r\n  editLabel: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  labels: state.labels.labels,\r\n  issues: state.issues.issues,\r\n});\r\nexport default connect(mapStateToProps, { deleteLabel, editLabel })(\r\n  LabelsTable\r\n);\r\n","import React, { useState } from 'react';\r\nimport m from './index.module.css';\r\nimport { Input, Alert } from 'antd';\r\nimport { CirclePicker } from 'react-color';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport { connect } from 'react-redux';\r\nimport { addLabel } from '../../redux/labels/actions';\r\nimport PropTypes from 'prop-types';\r\nimport { labelType } from '../../types';\r\n\r\nconst LabelsModal = ({ addLabel, labels, visible, setVisible }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [bgc, setBgc] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const add = () => {\r\n    const label = {\r\n      id: labels.length + 1,\r\n      bgc,\r\n      title,\r\n    };\r\n    if (!title.trim() || !bgc.trim()) {\r\n      setError('Enter all fields');\r\n      setTimeout(() => {\r\n        setError('');\r\n      }, 3000);\r\n    } else {\r\n      addLabel(label);\r\n      setVisible();\r\n    }\r\n  };\r\n  const onCancel = () => {\r\n    setVisible();\r\n    setBgc('');\r\n    setTitle('');\r\n    setEditMode(false);\r\n  };\r\n  return (\r\n    <Modal title=\"Add Label\" visible={visible} onOk={add} onCancel={onCancel}>\r\n      <div className={m.body}>\r\n        <Input\r\n          className={m.input}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          value={title}\r\n          allowClear\r\n          placeholder=\"enter label title\"\r\n        />\r\n        <div className={m.selectColor}>\r\n          <span className={m.span} onMouseOver={() => setEditMode(true)}>\r\n            select color\r\n          </span>\r\n          {editMode && (\r\n            <div\r\n              onMouseLeave={() => setEditMode(false)}\r\n              className={m.colorPicker}\r\n            >\r\n              <CirclePicker value={bgc} onChange={(e) => setBgc(e.hex)} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {bgc && (\r\n          <div style={{ backgroundColor: bgc }} className={m.selectedColor} />\r\n        )}\r\n      </div>\r\n      {error && <Alert message={error} type=\"error\" />}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nLabelsModal.propTypes = {\r\n  labels: PropTypes.arrayOf(PropTypes.shape(labelType)) || [],\r\n  addLabel: PropTypes.func,\r\n  visible: PropTypes.bool,\r\n  setVisible: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  labels: state.labels.labels,\r\n});\r\nexport default connect(mapStateToProps, { addLabel })(LabelsModal);\r\n","import React from 'react';\r\nimport { Button, PageHeader } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LabelsHeader = ({ setVisible }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <PageHeader\r\n      className=\"site-page-header\"\r\n      onBack={() => history.goBack()}\r\n      title=\"Labels\"\r\n      extra={[\r\n        <Button key={1} onClick={setVisible} type=\"primary\" size=\"large\">\r\n          Add label +\r\n        </Button>,\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nLabelsHeader.propTypes = {\r\n  setVisible: PropTypes.func,\r\n};\r\n\r\nexport default LabelsHeader;\r\n","import { ISSUES_PAGE, LABELS_PAGE, ISSUE_PAGE } from './path';\r\nimport IssuePage from '../containers/issuePage/index';\r\nimport IssuesPage from '../containers/IssuesPage/index';\r\nimport LabelsPage from '../containers/LabelsPage/index';\r\n\r\nconst ISSUES = {\r\n  component: IssuesPage,\r\n  path: ISSUES_PAGE,\r\n};\r\nconst LABELS = {\r\n  component: LabelsPage,\r\n  path: LABELS_PAGE,\r\n};\r\nconst ISSUE = {\r\n  component: IssuePage,\r\n  path: ISSUE_PAGE,\r\n};\r\n\r\nexport default [ISSUES, LABELS, ISSUE];\r\n","export const ISSUES_PAGE = '/issues/:label?';\r\nexport const LABELS_PAGE = '/labels';\r\nexport const ISSUE_PAGE = '/issue/:id';\r\n","import React, { useState } from 'react';\r\nimport LabelsTable from '../../components/labels/LabelsTable';\r\nimport LabelsModal from '../../Modals/LabelsModal';\r\nimport LabelsHeader from '../../components/labels/LabelsHeader';\r\n\r\nconst LabelsPage = () => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <LabelsHeader setVisible={() => setVisible(true)} />\r\n      <LabelsModal visible={visible} setVisible={() => setVisible(false)} />\r\n      <LabelsTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LabelsPage;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport routes from './publicRoutes';\r\n\r\nconst Routing = () => {\r\n  return (\r\n    <div>\r\n      {routes.map((route) => (\r\n        <Route key={route.path} path={route.path} component={route.component} />\r\n      ))}\r\n      <Route exact path=\"/\" render={() => <Redirect to=\"/issues\" />} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Layout } from 'antd';\r\nimport store from './redux/store';\r\nimport AddIssueDrawer from './Modals/AddIssueDrawer';\r\nimport Routing from './routing/Routing';\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Layout className=\"layout\">\r\n        <Layout.Content className=\"content\">\r\n          <div className=\"container\">\r\n            <Routing />\r\n            <AddIssueDrawer />\r\n          </div>\r\n        </Layout.Content>\r\n      </Layout>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"issue_title__kA_tT\",\"labelsCard\":\"issue_labelsCard__1tXQT\",\"labelsCardBody\":\"issue_labelsCardBody__14LA4\",\"comments\":\"issue_comments__2WU1V\"};"],"sourceRoot":""}